[{"title":"PHP","date":"2022-03-14T03:40:24.000Z","url":"/2022/03/14/PHP/","categories":[[" ",""]],"content":"PHP大小写敏感 ·在PHP中，所有关键词（例如if、else、echo等等）和用户定义的函数名、类名均不区分大小写·但是变量名会对大小写敏感 变量规则 变量以$符号开头，其后是变量的名称变量名称必须以字母或下划线开头，而不能以数字开头变量名称只能包含字母、数字和下划线（A-z、0-9以及_)变量名称区分大小写，建议用小写PHP没有创建变量的命令，变量会在首次为其赋值时自动被创建PHP是一门类型松散的语言，在为变量赋值时，不必声明变量的数据类型，PHP会自动把变量转换为相应的数据类型 字符串 字符串要用单引号或双引号括住，字符串中可以包括html标记用单引号时，程序不会对字符串进行解析。如果字符串中包含变量，也只输出变量名，而不会输出变量值;用双引号则会对字符串进行解析。如果字符串中包含变量，则会对变量进行解析而输出变量的值;当一个字符串是纯文本组成的时候，尽量用单引号 a .= b a = a .b （连接两个字符串） 变量函数库 类型 说明 语法empty 检查变量是否为空，为空返 empty(变量) 回TRUE，否则为FALSEgettype 获取变量的类型 gettype(变量)is_array 检查变量是否为数组类型 is.array(变量)isset 检查变量是否被设置或赋值 isset(变量)unset 给定变量，即销毁变量 unset(变量)var_dump 打印变量的相关信息 var dump(变量) 表单属性● 表单METHOD属性METHOD说明本表单向服务器发送输入信息时的使用方式. 一般有两种选择:POST和GET，默认的方式是GET ● GET方法使用GET时，HTTP的客户端将表单上用户的输入信息作为字符串附加在ACTION所设定的URL后面·用“?”和“&amp;”隔开，然后把整个字符串传送到服务器端但由于系统内置变量的长度限制了输入字符串的长度，因此，用GET方式所能传送的数据长度受到限制(一般为2k字节)·注意:GET方法不具有保密性，不适合处理如信用卡卡号等要求保密的内容，而且不能传送非ASCI码的字符 表单属性 GET方法和POST方法的对比GET方式 get方式在url后面拼接参数2．只能以文本的形式传递数据3．传递的数据量小，4KB左右4、安全性低，会将数据显示在地址栏5．速度快，通常用于对安全性要求不高的请求POST方式 安全性较高2．传递数据量大，请求对数据长度没有要求3．请求不会被缓存，也不会保留在浏览器历史记录中 服务器端接收数据. PHP中有三种变量进行数据的接收$_GET·变量接受所有以get方式发送的请求，及浏览器地址栏中的?之后的内容$_POST·变量接受所有以post方式发送的请求·例如，一个form以 method=post提交，提交后php 会处理post过来的全部变量$_REQUEST·支持两种方式发送过来的请求，即post和get它都可以接受 文件访问函数:打开文件fopen()函数参数mode的可选值r以只读方式打开，如果文件不存在将出错w以写入方式打开，将文件指针指向文件头部，并删除文件内容，如果文件不存在则创建文件a以追加写入方式打开，将文件指针指向文件末尾，如果文件不存在则创建文件r+以读写方式(先读后写)打开，将文件指针指向文件头部。W+以读写方式（先写后读)打开，将文件指针指向文件头部，并删除文件内容a+以追加读写方式打开，将文件指针指向文件末尾。x以只写方式创建并打开文件，并将文件指针指向文件头。如果指定文件存在，就会打开失败X+以读写方式创建并打开文件，并将文件指针指向文件头。如果指定文件存在，就会打开失败b以二进制模式打开，可与r…w…a合用 文件访问函数∶读取文件读取文件常用函数fread0读取整个文件或文件中指定长度的字符串，可用于二进制文件读取fgets()读取文件中的一行字符fgetss()读取文件中的一行字符,并去掉所有HTML和PHP标记fgetc()读取文件中的一个字符file_get_contents()将文件读入字符串file()把文件读入到一个数组中readfile()读取一个文件，并输出到输出缓冲fread()读取整个文件或文件中指定长度的字符串，可用于二进制文件读取 文件的基本操作函数 语法 说明copy() copy(源文件,目的文件) 复制文件unlink() unlink(目标文件) 删除文件rename() rename(I日文件名,新文件名) 重命名文件或目录，或移动文件ftruncate() ftruncate(目标文件资源,截取长度) 将文件截断到指定长度file_exists() file_exists(目标文件名) 判断文件或文件夹是否存在is_file() is_file(文件名) 判断指定的路径存在且为文件 获取文件属性realpath() 返回文件的物理路径pathinfo() 以数组形式返回文件的路径和文件名信息 目录的基本操作函数 说明 示例mkdir(pathname) 新建一个指定的目录 mkdir(‘temp’)rmdiridirname) 患除目录，该目录必须为空 rmdirt (“data”)getcwd(void) 取得当前文件所在的目录 echo getcwd();chdir(dirname) 改变当前目录 chdirt(“ ../“);opendir(path) 打开目录，返回目录的指针 $dirh=opendir(‘temP’);closedir() 关闭目录，参数为目录指针 clasedir($dirh);readdir() 遍历历目录 $file=readdir($dirh)scandir(path, sort) 以数组形式遍历目录， $arr=scandir(‘D:\\ICQ’,1); sort参数可设置升序或降序排列 会话控制的概述● HTTP协议本身是无状态的● http协议无法记录用户经常上哪些网站，有什么爱好，也无法记录用户的ID帐号和密码，这就是无状态● HTTP协议本身是无状态的，客户端只需要简单的向服务器请求下载某些文件，无论足客户端还是服务器都没有必要记录彼此过去的行为，每一次请求之间都是独立的● .HTTP协议自身不具备保存之前发送过的请求或相应的功能 设置cookiePHP用setcookie函数来设置cookie Cookie在传输过程中，是HTTP协议头的一部分，用于浏览器和服务器之间传递信息所以必须在任何属于HTML文件本身的内容输出之前调用SetCookie()函数，调用该函数前不能有任何内容setcookie函数语法setcookie(namexalue.expire.p.ath.domain.secure)参数解释 参数类型 参数名 解释必填 name 设置cookie的名字value 设定cookie的值可选 expire 设定cookie的有效期，以秒为单位path 服务器端的有效路径 domain 设定有效域名secure 设定是否仅在https安全连接时才设定"},{"title":"Linux","date":"2022-03-14T03:39:54.000Z","url":"/2022/03/14/Linux/","categories":[[" ",""]],"content":"/etc/passwad 存储当前系统中所有的用户的信息（密码除外）/etc/shadow 存储当前系统中所有的用户的密码信息ls -l 查看文件权限 （r读w写x执行） ◆显示、 设置文件的默认权限[root@localhost ~]# umask [-S] #显示、设置文件的默认权限➢参数说明: -S以rwx形式显示新建文件的默认权限➢命令说明:●对于windows而言，默认权限是从上级目录继承而来的，而linux则是通过umask权限设定的， 如果用户建立文件，默认是没有可执行权限的,即权限表示为- rw-rw-rw-，即666●如果用户建立目录,默认权限是全开放的，即权限表示drwxrwxrwx.即777●umask的值 ，默认为022，就是需要减掉的权限，比如:建立文件时, 666-022 == 644 ,即r—-建立目录时, 777-022==755 ,即drx.-xr-x●这就是为什么我们在没有设置umask值时，默认创建的文件和目录权限分别为644和755了 . 文件权限分别为:读(read)，写(write)，执行x(execute)，简写即为(r,w,x) ，也可以可用数字来(4,2,1)表示，-即无权限 root账户不受文件权限的读写限制，执行权限受限制 用户获取文件权限的顺序:先看是否为所有者，如果是，则后面权限不看;再看是否为所属组，如果是，则后面权限不看 缺省创建的文件不可授予可执行的权限，基于最基本的安全机制，防止病毒等 test@ubuntu:~$ curL file:/ / /home/test/Desktop/baidu. txt（可以代替cat命令实现弯道访问）"},{"title":"第一篇博客","date":"2022-03-08T08:16:36.000Z","url":"/2022/03/08/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/","categories":[[" ",""]],"content":"为啥子每次在cmd中hexo g -d 有的时候链接不上服务器有的时候链接的上呢。。fatal: unable to access ‘;: OpenSSL SSL_read: Connection was reset, errno 10054 已解决：git config –global http.proxy  git config –global https.proxy 通过git代理通道加速就好啦"}]